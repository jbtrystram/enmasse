// +build !ignore_autogenerated

/*
 * Copyright 2018, EnMasse authors.
 * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).
 */

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Credentials) DeepCopyInto(out *Credentials) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Credentials.
func (in *Credentials) DeepCopy() *Credentials {
	if in == nil {
		return nil
	}
	out := new(Credentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownstreamEndpointStatus) DeepCopyInto(out *DownstreamEndpointStatus) {
	*out = *in
	in.ExternalDownstreamStrategy.DeepCopyInto(&out.ExternalDownstreamStrategy)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownstreamEndpointStatus.
func (in *DownstreamEndpointStatus) DeepCopy() *DownstreamEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(DownstreamEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownstreamStrategy) DeepCopyInto(out *DownstreamStrategy) {
	*out = *in
	if in.ExternalDownstreamStrategy != nil {
		in, out := &in.ExternalDownstreamStrategy, &out.ExternalDownstreamStrategy
		*out = new(ExternalDownstreamStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvidedDownstreamStrategy != nil {
		in, out := &in.ProvidedDownstreamStrategy, &out.ProvidedDownstreamStrategy
		*out = new(ProvidedDownstreamStrategy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownstreamStrategy.
func (in *DownstreamStrategy) DeepCopy() *DownstreamStrategy {
	if in == nil {
		return nil
	}
	out := new(DownstreamStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDownstreamStrategy) DeepCopyInto(out *ExternalDownstreamStrategy) {
	*out = *in
	out.Credentials = in.Credentials
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDownstreamStrategy.
func (in *ExternalDownstreamStrategy) DeepCopy() *ExternalDownstreamStrategy {
	if in == nil {
		return nil
	}
	out := new(ExternalDownstreamStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IoTProject) DeepCopyInto(out *IoTProject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IoTProject.
func (in *IoTProject) DeepCopy() *IoTProject {
	if in == nil {
		return nil
	}
	out := new(IoTProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IoTProject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IoTProjectList) DeepCopyInto(out *IoTProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IoTProject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IoTProjectList.
func (in *IoTProjectList) DeepCopy() *IoTProjectList {
	if in == nil {
		return nil
	}
	out := new(IoTProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IoTProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IoTProjectSpec) DeepCopyInto(out *IoTProjectSpec) {
	*out = *in
	in.DownstreamStrategy.DeepCopyInto(&out.DownstreamStrategy)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IoTProjectSpec.
func (in *IoTProjectSpec) DeepCopy() *IoTProjectSpec {
	if in == nil {
		return nil
	}
	out := new(IoTProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IoTProjectStatus) DeepCopyInto(out *IoTProjectStatus) {
	*out = *in
	if in.DownstreamEndpoint != nil {
		in, out := &in.DownstreamEndpoint, &out.DownstreamEndpoint
		*out = new(DownstreamEndpointStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IoTProjectStatus.
func (in *IoTProjectStatus) DeepCopy() *IoTProjectStatus {
	if in == nil {
		return nil
	}
	out := new(IoTProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedDownstreamStrategy) DeepCopyInto(out *ProvidedDownstreamStrategy) {
	*out = *in
	out.Credentials = in.Credentials
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedDownstreamStrategy.
func (in *ProvidedDownstreamStrategy) DeepCopy() *ProvidedDownstreamStrategy {
	if in == nil {
		return nil
	}
	out := new(ProvidedDownstreamStrategy)
	in.DeepCopyInto(out)
	return out
}
